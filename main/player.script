function init(self)                                 -- [1]
	msg.post(".", "acquire_input_focus")            -- [2]

	self.moving = false                             -- [3]
	self.firing = false                     -- [1]
	self.input = vmath.vector3()                    -- [4]
	self.dir = vmath.vector3(0, 1, 0)               -- [5]
	self.speed = 50                                 -- [6]
	self.turn = false
	self.current_animation = hash("palyer-idle")
end

function final(self)                                -- [7]
	msg.post(".", "release_input_focus")            -- [8]
end

function update(self, dt)
	if self.moving then
		local pos = go.get_position()
		pos = pos + self.dir * self.speed * dt
		go.set_position(pos)
	end

	if self.firing then
		local angle = math.atan2(self.dir.y, self.dir.x)    -- [1]
		local rot = vmath.quat_rotation_z(angle)            -- [2]
		local props = { dir = self.dir }                    -- [3]
		factory.create("#rocketfactory", nil, rot, props)   -- [4]
	end

	update_animation(self)
	
	self.input.x = 0
	self.input.y = 0

	self.moving = false
	self.firing = false                     -- [2]
end

function update_animation(self)
	local animation = hash("player-idle")
	if self.dir.x > 0 then
		animation = hash("player-right")
	elseif self.dir.x < 0 then
		animation = hash("player-left")
	elseif self.dir.y > 0 then
		animation = hash("player-up")
	elseif self.dir.y < 0 then
		animation = hash("player-down")
	end

	if self.moving == false then
		animation = hash("player-idle")
	end
	
	if self.current_animation ~= animation then
		msg.post("/player#sprite", "play_animation", { id = animation })
		self.current_animation = animation
	end
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Remove this function if not needed
end

function on_input(self, action_id, action)          -- [14]
	if action_id == hash("up") then
		self.input.y = 1                            -- [15]
	elseif action_id == hash("down") then
		self.input.y = -1
	elseif action_id == hash("left") then
		self.input.x = -1
	elseif action_id == hash("right") then
		self.input.x = 1
	elseif action_id == hash("fire") and action.pressed then
		self.firing = true
	end

	if vmath.length(self.input) > 0 then
		self.moving = true                          -- [16]
		self.dir = vmath.normalize(self.input)      -- [17]
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
